@using System.Numerics
<div style="width: 100%; height: 100%;"	
     @onmouseover="@OnMouseOver"
     @onmousemove="@OnMouseMove"
     @onmousedown="@OnMouseDown"
     @onmouseup="@OnMouseUp"
	 @onmouseout="@OnMouseOut">
	@ChildContent
</div>

@code {

	[Parameter()] 
	public MouseState State { get; set; } = new();

	[Parameter()]
	public RenderFragment ChildContent { get; set; }


	private void OnMouseOver(MouseEventArgs args)
	{
		State.Over = true;
	}

	private void OnMouseMove(MouseEventArgs args)
	{
		State.Position = new MousePosition(
			new Vector2((float)args.ScreenX, (float)args.ScreenY),
			new Vector2((float)args.PageX, (float)args.PageY),
			new Vector2((float)args.ClientX, (float)args.ClientY),
			new Vector2((float)args.OffsetX, (float)args.OffsetY),
			new Vector2((float)args.MovementX, (float)args.MovementY)
		);
	}

	private void OnMouseDown(MouseEventArgs args) => SetButtonState(args.Button, true);

	private void OnMouseUp(MouseEventArgs args) => SetButtonState(args.Button, false);

	private void SetButtonState(long button, bool value)
	{
		switch (button)
		{
			case 0:
				State.LeftButtonPressed = value;
				break;
			case 1:
				State.MiddleButtonPressed = value;
				break;
			case 2:
				State.RightButtonPressed = value;
				break;
		}
	}

	private void OnMouseOut(MouseEventArgs args)
	{
		State.Over = false;
	}

}
